-- CREATE TABLE users (
--     id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
--     username VARCHAR(45) NOT NULL,
--     email VARCHAR(45) NOT NULL,
--     password VARCHAR(200) NOT NULL,
--     name VARCHAR(45) NOT NULL,
--     coverPic VARCHAR(100),
--     profilePic VARCHAR(100),
--     city VARCHAR(45),
--     website VARCHAR(45)
-- );

-- CREATE TABLE posts (
--     id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
--     description VARCHAR(200),
--     img VARCHAR(200),
--     createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- Changed semicolon to comma
--     userId INTEGER REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
-- );

-- CREATE TABLE comments (
--     id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
--     description VARCHAR(200),
--     createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     commentuserId INTEGER REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
--     postId INTEGER REFERENCES posts(id) ON DELETE CASCADE ON UPDATE CASCADE  -- Corrected to reference posts(id)
-- );

-- CREATE TABLE stories (
--     id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
--     img VARCHAR(200) NOT NULL,
--     storyuserId INTEGER REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
-- );

-- CREATE TABLE relationships (
--     id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
--     followerUserID INTEGER REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
--     followedUserID INTEGER REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
-- );
-- CREATE TABLE likes(
--    id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
--    likeUserID INTEGER REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
--    likePostID INTEGER REFERENCES posts(id) ON DELETE CASCADE ON UPDATE CASCADE 
-- );
